{"title":"A study of PO","date":"2018-12-17T12:51:03.000Z","slug":"A-study-of-PO","tags":["language","learn","translation"],"updated":"2019-01-09T07:56:43.445Z","content":"<p>We’ll talk about the GNU Gettext and the PO format here.</p>\n<h4 id=\"1-Why-do-we-need-to-talk-about-this\"><a href=\"#1-Why-do-we-need-to-talk-about-this\" class=\"headerlink\" title=\"1. Why do we need to talk about this?\"></a>1. Why do we need to talk about this?</h4><p>I have been working on the openATTIC project for almost two months, from <a href=\"https://github.com/kristol07/oA_denv\" target=\"_blank\" rel=\"noopener\">building the environment</a> of a small Ceph cluster (5 nodes), to writing the <a href=\"https://kristol07.docs.stoplight.io/api-reference/oA-api\" target=\"_blank\" rel=\"noopener\">openATTIC RESTful API documentation</a>, and now merging two ‘branches’ of different features: one I call ‘enhanced’, and another ‘base’ (which is actually the master branch of the oA project). </p>\n<p>One significant difference is the ‘enhanced’ branch is a hard-coded translated version, the translations appear directly in the source code file (almost in every html file under the <em>/webui</em> directory). Although these translations are good enough, well, much more better than the google translation result, but it’s not a good way for the i18n(internationalization), especially for this ‘international’ project. </p>\n<p>So here comes the GNU Gettext and the PO format files, this is the way the master branch do, and you could find these files under the <em>/webui/locale/</em> directory. They exist for this situation, where you would like to write a program in your native language, not only English, and the program should be ‘translatable’, which means any other translators can easily contribute for other versions. </p>\n<p>In a word, the PO format file is a place where you put your translation in your language, and you can just pay a little attention to your source code file in order to internationlize a program. Easy, and elegant!</p>\n<h4 id=\"2-What-are-Gettext-and-PO-file\"><a href=\"#2-What-are-Gettext-and-PO-file\" class=\"headerlink\" title=\"2. What are Gettext and PO file?\"></a>2. What are Gettext and PO file?</h4><blockquote>\n<p>The GNU `gettext’ utilities are a set of tools that provides a framework to help other GNU packages produce multi-lingual messages.</p>\n</blockquote>\n<p>So, Gettext is a system which helps us for the translation. And the translation file format it defines, is just the PO format.</p>\n<h4 id=\"3-Basic-syntax-of-the-PO-format-file\"><a href=\"#3-Basic-syntax-of-the-PO-format-file\" class=\"headerlink\" title=\"3. Basic syntax of the PO format file\"></a>3. Basic syntax of the PO format file</h4><p>Example:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#: finddialog.cpp:<span class=\"number\">39</span></span><br><span class=\"line\">msgid <span class=\"string\">\"Gaseous Nebulae\"</span></span><br><span class=\"line\">msgstr <span class=\"string\">\"Gasne magline\"</span></span><br></pre></td></tr></table></figure></p>\n<p>Such a snippet is also called a <em>message</em>, a .po file is just a group of messages.</p>\n<p>The first line is the source reference comment, which is a line staring with <em>#:</em> above the <em>msgid “…”</em> line. “It tells from which source file of the program code (or source document of any kind), and the line in that source file.”</p>\n<p>The <em>msgid</em> string is follwed by the original string, which you want to translate into another language, and which are wrapped in double quotes.</p>\n<p>The keyword <em>msgstr</em> denotes then the string which to become the translation, and you see, also double-quoted.</p>\n<h5 id=\"3-1-String-wrapping\"><a href=\"#3-1-String-wrapping\" class=\"headerlink\" title=\"3.1 String wrapping\"></a>3.1 String wrapping</h5><p>If a message to be translated is long, you can just wrap the original and translation strings like this example below:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#: indimenu.cpp:<span class=\"number\">96</span></span><br><span class=\"line\">msgid <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"string\">\"No INDI devices (...)\"</span></span><br><span class=\"line\"><span class=\"string\">\"(...) in the devices menu.\"</span></span><br><span class=\"line\">msgstr <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"string\">\"Nema INDI uređaja (...) u meniju uređaja.\"</span></span><br></pre></td></tr></table></figure>\n<hr>\n<p>To be continued…</p>\n<p>Problems:</p>\n<ul>\n<li>When you modified a html file, if the position of the ‘translate’ tag changed, then you need to correct the .po file as well. This is inconvenient if we want to add more features in the future.  -&gt; Q: Is there any solution ?</li>\n</ul>\n<hr>\n<h4 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References:\"></a>References:</h4><ul>\n<li><a href=\"http://pology.nedohodnik.net/doc/user/en_US/ch-about.html\" target=\"_blank\" rel=\"noopener\">A study of PO</a></li>\n<li><a href=\"https://www.gnu.org/software/gettext/manual/gettext.html#Why\" target=\"_blank\" rel=\"noopener\">GNU gettext utilities</a></li>\n<li><a href=\"https://angular-gettext.rocketeer.be/\" target=\"_blank\" rel=\"noopener\">Angular-gettext</a></li>\n</ul>\n","next":{"title":"First post","slug":"first-post"},"link":"https://kristol07.github.io/post/A-study-of-PO/"}